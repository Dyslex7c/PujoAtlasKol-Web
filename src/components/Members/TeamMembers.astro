---
import { team, Tech, NonTech } from '@/constants/team';
import { cn } from '@/libs/utils';
import { RiGithubFill, RiDiscordFill, RiLinkedinFill, RiTwitterXLine } from 'react-icons/ri';
import { LuLink } from 'react-icons/lu';

type Department = (typeof Tech)[number] | (typeof NonTech)[number];

const colors: Record<Department, string> = {
  Content: 'bg-red-500',
  Community: 'bg-blue-500',
  Web: 'bg-purple-500',
  Mobile: 'bg-pink-600',
  Backend: 'bg-green-800',
  DevOps: 'bg-black',
  'Data Science': 'bg-amber-500',
  Design: 'bg-green-500',
  Coordinator: 'bg-orange-500',
};
---

<>
  {
    Object.entries(team).map(([category, members]) => {
      return (
        <>
          <h3 class="font-work font-semibold text-2xl lg:text-4xl text-center lg:text-left">
            {category}
          </h3>
          <div class="bg-primary-background w-full flex flex-col md:grid md:grid-cols-3 lg:grid-cols-5 place-items-evenly gap-4 p-1 rounded-2xl">
            {members.map((member) => (
              <>
                <div
                  class={cn(
                    'flex flex-col flex-1 w-full items-center gap-2 p-3 lg:p-4 rounded-xl',
                    'text-center relative bg-primary-background outline outline-primary-foreground',
                    'shadow-[3px_3px_0_3px] shadow-primary-foreground',
                  )}
                  id={member.id}
                >
                  <LuLink
                    data-share-button
                    data-member-id={member.id}
                    role="button"
                    title="Copy Link"
                    className={cn(
                      'text-2xl p-1 rounded-full bg-secondary-background',
                      'absolute right-4 top-4',
                    )}
                  />
                  <img
                    src={member.avatar}
                    alt={member.name}
                    class="size-24 bg-secondary-background rounded-full"
                  />
                  <span class="font-work font-semibold text-lg">{member.name}</span>
                  <span class="px-1 whitespace-nowrap rounded-3xl text-xs font-work font-semibold outline outline-1 flex items-center gap-1">
                    <div class={cn('size-2 rounded-full', colors[member.department])} />
                    {member.department}
                  </span>
                  <div class="flex mt-2 gap-4">
                    <a
                      title="Discord"
                      href={member.socials.discord}
                      target="_blank"
                      rel="noreferrer"
                    >
                      <RiDiscordFill className="text-2xl p-1 rounded-full bg-secondary-background" />
                    </a>
                    {member.socials.github && (
                      <a
                        title="Github"
                        href={member.socials.github}
                        target="_blank"
                        rel="noreferrer"
                      >
                        <RiGithubFill className="text-2xl p-1 rounded-full bg-secondary-background" />
                      </a>
                    )}
                    {member.socials.twitter && (
                      <a
                        title="Twitter"
                        href={member.socials.twitter}
                        target="_blank"
                        rel="noreferrer"
                      >
                        <RiTwitterXLine className="text-2xl p-1 rounded-full bg-secondary-background" />
                      </a>
                    )}
                    {member.socials.linkedin && (
                      <a
                        title="LinkedIn"
                        href={member.socials.linkedin}
                        target="_blank"
                        rel="noreferrer"
                      >
                        <RiLinkedinFill className="text-2xl p-1 rounded-full bg-secondary-background grid place-items-center" />
                      </a>
                    )}
                  </div>
                </div>
              </>
            ))}
          </div>
        </>
      );
    })
  }
</>

<script is:inline>
  (() => {
    document.addEventListener('DOMContentLoaded', () => {
      const shareButtons = document.querySelectorAll('[data-share-button]');
      shareButtons.forEach((button) => {
        button.addEventListener('click', (event) => {
          event.preventDefault();

          try {
            const memberId = button.dataset.memberId;
            const memberElement = document.getElementById(memberId);

            if (!memberElement) {
              throw new Error(`Member element not found for ID: ${memberId}`);
            }

            const currentUrl = new URL(window.location.href);
            currentUrl.hash = '';
            currentUrl.hash = `#${memberElement.id}`;
            const url = currentUrl.toString();
            navigator.clipboard.writeText(url);

            // indicate link copy success
            button.classList.add('!bg-white');
            setTimeout(() => {
              button.classList.remove('!bg-white');
            }, 1000);
          } catch (error) {
            console.error('Error copying link:', error);
          }
        });
      });

      // highlight member card based on URL hash
      const currentUrl = new URL(window.location.href);
      const hash = decodeURIComponent(currentUrl.hash.slice(1));
      if (hash) {
        const memberCard = document.getElementById(hash);
        memberCard.classList.add('!bg-[#FFFAF0]');
      }
    });
  })();
</script>
